@model RestaurantMenuApp.ViewModels.CreateViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Meal</h4>
<hr />
<div class="row">
    <div class="col-md-12">
        @using (Html.BeginForm("Create", "Meals", FormMethod.Post))
        {
            <div class="row">
                <div class="col-md-6">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, new { @class = "control-label" })
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "control-label text-danger alert-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Price, new { @class = "control-label" })
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "control-label text-danger alert-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ChosenIngredients, new { @class = "control-label" })
                        <br />
                        @{
                            var ingredientList = Model.Ingredients as List<Ingredient>;
                            @Html.ListBoxFor(model => model.ChosenIngredients, new MultiSelectList(ingredientList, "Id", "Name"), new { Multiple = "multiple", size = "5", @class = "form-control" })
                        }
                        @Html.ValidationMessageFor(model => model.ChosenIngredients, "", new { @class = "control-label text-danger alert-danger" })
                    </div>
                </div>
                <div class="col-md-6">

                    <div class="form-group">
                        @Html.LabelFor(model => model.MealTypeId, new { @class = "control-label" })
                        <br />
                        @{
                            var typesList = Model.MealTypes as IEnumerable<MealType>;

                            foreach (var item in typesList)
                            {
                                @Html.RadioButtonFor(model => model.MealTypeId, item.Id) @Html.Label(item.TypeMeal.ToString()) <br />
                            }

                        }

                        @Html.ValidationMessageFor(model => model.MealTypeId, "", new { @class = "control-label text-danger alert-danger" })
                    </div>

                    <div class="form-group form-check">
                        <label class="form-check-label">
                            @Html.CheckBoxFor(model => model.IsVegetarian)
                            @Html.DisplayNameFor(model => model.IsVegetarian)
                        </label>
                    </div>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-4 offset-4 text-center">
                    <input type="submit" value="Create" class="btn btn-primary btn-block" />
                </div>
            </div>
        }
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
   
    </script>
}
